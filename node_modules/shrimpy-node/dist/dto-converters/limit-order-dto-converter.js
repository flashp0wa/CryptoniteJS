"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var decimal_dto_converter_1 = require("./decimal-dto-converter");
var LimitOrderDtoConverter = /** @class */ (function () {
    function LimitOrderDtoConverter() {
        this._decimalDtoConverter = new decimal_dto_converter_1.DecimalDtoConverter();
    }
    LimitOrderDtoConverter.prototype.convertFromDto = function (dto) {
        var result = {
            id: dto.id,
            baseSymbol: dto.baseSymbol,
            quoteSymbol: dto.quoteSymbol,
            amount: this._decimalDtoConverter.convertFromDto(dto.amount),
            price: this._decimalDtoConverter.convertFromDto(dto.price),
            side: dto.side,
            timeInForce: dto.timeInForce,
            status: dto.status,
            cancelRequested: dto.cancelRequested,
            success: dto.success,
            errorCode: dto.errorCode,
            errorMessage: dto.errorMessage,
            exchangeApiErrors: dto.exchangeApiErrors,
        };
        return result;
    };
    LimitOrderDtoConverter.prototype.convertToDto = function (model) {
        var result = {
            id: model.id,
            baseSymbol: model.baseSymbol,
            quoteSymbol: model.quoteSymbol,
            amount: this._decimalDtoConverter.convertToDto(model.amount),
            price: this._decimalDtoConverter.convertToDto(model.price),
            side: model.side,
            timeInForce: model.timeInForce,
            status: model.status,
            cancelRequested: model.cancelRequested,
            success: model.success,
            errorCode: model.errorCode,
            errorMessage: model.errorMessage,
            exchangeApiErrors: model.exchangeApiErrors,
        };
        return result;
    };
    return LimitOrderDtoConverter;
}());
exports.LimitOrderDtoConverter = LimitOrderDtoConverter;
//# sourceMappingURL=limit-order-dto-converter.js.map